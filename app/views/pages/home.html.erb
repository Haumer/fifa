<%= render "shared/banner" %>
<div class="background_wrapper">
  <div class="container">
    <div class="row">
      <div class="hype col-xs-12 col-sm-6 col-sm-offset-3">
        <div  class="hype_message">
          <% @matches_order = Match.all.order(:cached_votes_score => :desc) %>
          <span><%= @matches_order.first.get_upvotes.size %> People are hyped for:</span>
          <span>
          <%= @matches_order.first.home_name %> vs <%= @matches_order.first.away_name %>
          </span>
        </div>
        <div class="hype_vote">
         <%= link_to hype_matches_path  do %>
          <button class="btn btn-primary">Vote Matches!</button>
         <% end %>
         <%= link_to hype_teams_path  do %>
          <button class="btn btn-primary">Vote Teams!</button>
         <% end %>
        </div>
      </div>
    </div>
    <div class="row">
      <h2>Group Standings</h2>
      <% @groups.each do |group| %>
        <div class="group col-xs-12 col-sm-6 col-lg-3">
          <%= link_to group_path(group) do %>
            <div class="group-header">
              <h4><%= group.name %></h4>
            </div>
          <% end %>
          <table class="home_groups">
            <tr>
              <th class="flag"></th>
              <th id="first_head">Country</th>
              <th class="data_head">W</th>
              <th class="data_head">D</th>
              <th class="data_head">L</th>
              <th class="data_head">Pts</th>
            </tr>
            <% losses_sorted = group.teams.sort_by {|e| e.losses} %>
            <% wins_sorted = losses_sorted.reverse.sort_by {|e| e.points} %>
            <% wins_sorted.reverse.each do |team| %>
            <tr class="home_groups_row">
              <td class="flag_data">
                <%= link_to team_path(team.id) do %>
                  <img src="<%= team.photo %>" alt="">
                <% end %>
              </td>
              <td id="first_value">
                <%= link_to team_path(team.id) do %>
                  <% if team.name == "Morroco" %>
                    Morocco
                  <% else %>
                    <%= team.name %>
                  <% end %>
                <% end %>
              </td>
              <td class="data_value"><%= team.wins %></td>
              <td class="data_value"><%= team.draws %></td>
              <td class="data_value"><%= team.losses %></td>
              <td class="data_value"><%= team.points %></td>
            </tr>
            <% end %>
          </table>
          <div class="next_match">
          <% sorted = group.matches.sort_by {|k, _v| k.date} %>
          <% array = [] %>
          <% sorted.each_with_index do |match_unit, index| %>
            <% if match_unit.date > DateTime.now.advance(:hours => +2) %>
              <% array << index %>
            <% end %>
          <% end %>
            <% if sorted[array.sort.first].date < DateTime.now %>
            <%= link_to match_path(sorted[array.sort.first]) do %>
              <span>Next Match: <%= sorted[array.sort.first].home_name %> vs <%= sorted[array.sort.first].away_name %></span>
              <br>
              <span>Currently LIVE </span>
              <% end %>
            <% else %>
              <%= link_to match_path(sorted[array.sort.first]) do %>
              <span>Next Match: <%= sorted[array.sort.first].home_name %> vs <%= sorted[array.sort.first].away_name %></span>
              <br>
              <span>In: </span>
                <% if sorted[array.sort.first].location.split(",").last.strip == "Saint Petersburg" %>
                  <span id="countdown" class="countdown-St-Petersburg"><%= sorted[array.sort.first].date %></span>
                <% elsif sorted[array.sort.first].location.split(",").last.strip == "Nizhny Novgorod" %>
                  <span id="countdown" class="countdown-Nizhny-Novgorod"><%= sorted[array.sort.first].date %></span>
                <% else %>
                  <span id="countdown" class="countdown-<%= sorted[array.sort.first].location.split(",").last.strip %>"><%= sorted[array.sort.first].date %></span>
                <% end %>
              <% end %>
            <% end %>
              <script>
              var countdown_divs = document.querySelectorAll(".countdown-<%= sorted[array.sort.first].location.split(",").last.strip %>")
              console.log(countdown_divs)
              countdown_divs.forEach((div) => {
                var dateOff = new Date().getTimezoneOffset() * -1
                var countDownDate = new Date(div.innerHTML).getTime() - (dateOff * 60 * 1000);
                console.log(<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %>)
                if ((<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %> === "Rostov-on-Don") || (<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %> === "Sochi") || (<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %> === "Saransk") || (<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %> === "Kazan")) {
                  var tZone = "Europe/" + "Moscow";
                } else if (<%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %> === "Yekaterinburg") {
                  var tZone = "Asia/" + "Yekaterinburg";
                } else {
                  var trueLoc = <%= sorted[array.sort.first].location.split(",").last.strip.inspect.html_safe %>;
                  var tZone = "Europe/" + trueLoc;
                }
                // Update the count down every 1 second
                var x = setInterval(function() {
                  // Get todays date and time
                  var date = new Date()
                  var dtrue = date.toLocaleString('en-UK', {timeZone: tZone })
                  var now = new Date(dtrue).getTime();

                  // Find the distance between now an the count down date
                  var distance = countDownDate - now;

                  // Time calculations for days, hours, minutes and seconds
                  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                  // Display the result in the element with id="demo"
                  div.innerHTML = days + "d " + hours + "h "
                  + minutes + "m " + seconds + "s ";

                  // If the count down is finished, write some text
                  if (distance < 0) {
                    clearInterval(x);
                    div.innerHTML = "LIVE";
                  }
                }, 1000);
              });
              // Set the date we're counting down to
              var countdown_divs = document.querySelectorAll(".countdown-St-Petersburg")
              console.log(countdown_divs)
            countdown_divs.forEach((div) => {
              var dateOff = new Date().getTimezoneOffset() * -1
              var countDownDate = new Date(div.innerHTML).getTime() - (dateOff * 60 * 1000);
              // Update the count down every 1 second
              var tZone = "Europe/" + "Moscow";
              var xstp = setInterval(function() {
                // Get todays date and time
                var date = new Date()
                var dtrue = date.toLocaleString('en-UK', {timeZone: tZone })
                var now = new Date(dtrue).getTime();

                // Find the distance between now an the count down date
                var distance = countDownDate - now;

                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                div.innerHTML = days + "d " + hours + "h "
                + minutes + "m " + seconds + "s ";

                // If the count down is finished, write some text
                if (distance < 0) {
                  clearInterval(xstp);
                  div.innerHTML = "LIVE";
                }
              }, 1000);
            });
            var countdown_divs = document.querySelectorAll(".countdown-Nizhny-Novgorod")
              console.log(countdown_divs)
            countdown_divs.forEach((div) => {
              var dateOff = new Date().getTimezoneOffset() * -1
              var countDownDate = new Date(div.innerHTML).getTime() - (dateOff * 60 * 1000);
              // Update the count down every 1 second
              var tZone = "Europe/" + "Moscow";
              var xstp = setInterval(function() {
                // Get todays date and time
                var date = new Date()
                var dtrue = date.toLocaleString('en-UK', {timeZone: tZone })
                var now = new Date(dtrue).getTime();

                // Find the distance between now an the count down date
                var distance = countDownDate - now;

                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                div.innerHTML = days + "d " + hours + "h "
                + minutes + "m " + seconds + "s ";

                // If the count down is finished, write some text
                if (distance < 0) {
                  clearInterval(xstp);
                  div.innerHTML = "LIVE";
                }
              }, 1000);
            });
            </script>
          </div>
        </div>
      <% end %>
    </div>
    <div class="row">
      <h2>Group Matches</h2>
      <% @groups.each do |group| %>
      <% sorted_matches = group.matches.sort_by { |k| k["date"]} %>
      <div class="group col-xs-12 col-sm-3">
        <div class="match-header">
          <table class="home_matches">
            <tr>
              <th id="match_first_head"><%= group.name %></th>
              <th class="match_data_head"></th>
              <th id="match_last_head">Matches</th>
            </tr>
          <% sorted_matches.each do |match_data| %>
            <% if match_data.date < DateTime.now.advance(:hours => +2)%>
            <tr class="home_match_row played">
              <td id="match_first_value"><%= match_data.home_name %></td>
              <td class="match_data_value"><%= link_to " vs ", match_path(match_data.id)%></td>
              <td id="match_last_value"><%= match_data.away_name %></td>
            </tr>
            <% elsif match_data.date < DateTime.now.advance(:hours => +24) %>
            <tr class="home_match_row today">
              <td id="match_first_value"><%= match_data.home_name %></td>
              <td class="match_data_value"><%= link_to " vs ", match_path(match_data.id)%></td>
              <td id="match_last_value"><%= match_data.away_name %></td>
            </tr>
            <% else %>
            <tr class="home_match_row">
              <td id="match_first_value"><%= match_data.home_name %></td>
              <td class="match_data_value"><%= link_to " vs ", match_path(match_data.id)%></td>
              <td id="match_last_value"><%= match_data.away_name %></td>
            </tr>
            <% end %>
          <% end %>
        </table>
        </div>
      </div>
      <% end %>
    </div>
  </div>
</div>
